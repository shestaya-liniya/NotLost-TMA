/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TabBarImport } from './routes/_tab-bar'
import { Route as IndexImport } from './routes/index'
import { Route as TabBarTryIndexImport } from './routes/_tab-bar/try/index'
import { Route as TabBarDialogsIndexImport } from './routes/_tab-bar/dialogs/index'
import { Route as TabBarDialogsDialogIdImport } from './routes/_tab-bar/dialogs/$dialogId'

// Create/Update Routes

const TabBarRoute = TabBarImport.update({
  id: '/_tab-bar',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TabBarTryIndexRoute = TabBarTryIndexImport.update({
  id: '/try/',
  path: '/try/',
  getParentRoute: () => TabBarRoute,
} as any)

const TabBarDialogsIndexRoute = TabBarDialogsIndexImport.update({
  id: '/dialogs/',
  path: '/dialogs/',
  getParentRoute: () => TabBarRoute,
} as any)

const TabBarDialogsDialogIdRoute = TabBarDialogsDialogIdImport.update({
  id: '/dialogs/$dialogId',
  path: '/dialogs/$dialogId',
  getParentRoute: () => TabBarRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_tab-bar': {
      id: '/_tab-bar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof TabBarImport
      parentRoute: typeof rootRoute
    }
    '/_tab-bar/dialogs/$dialogId': {
      id: '/_tab-bar/dialogs/$dialogId'
      path: '/dialogs/$dialogId'
      fullPath: '/dialogs/$dialogId'
      preLoaderRoute: typeof TabBarDialogsDialogIdImport
      parentRoute: typeof TabBarImport
    }
    '/_tab-bar/dialogs/': {
      id: '/_tab-bar/dialogs/'
      path: '/dialogs'
      fullPath: '/dialogs'
      preLoaderRoute: typeof TabBarDialogsIndexImport
      parentRoute: typeof TabBarImport
    }
    '/_tab-bar/try/': {
      id: '/_tab-bar/try/'
      path: '/try'
      fullPath: '/try'
      preLoaderRoute: typeof TabBarTryIndexImport
      parentRoute: typeof TabBarImport
    }
  }
}

// Create and export the route tree

interface TabBarRouteChildren {
  TabBarDialogsDialogIdRoute: typeof TabBarDialogsDialogIdRoute
  TabBarDialogsIndexRoute: typeof TabBarDialogsIndexRoute
  TabBarTryIndexRoute: typeof TabBarTryIndexRoute
}

const TabBarRouteChildren: TabBarRouteChildren = {
  TabBarDialogsDialogIdRoute: TabBarDialogsDialogIdRoute,
  TabBarDialogsIndexRoute: TabBarDialogsIndexRoute,
  TabBarTryIndexRoute: TabBarTryIndexRoute,
}

const TabBarRouteWithChildren =
  TabBarRoute._addFileChildren(TabBarRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof TabBarRouteWithChildren
  '/dialogs/$dialogId': typeof TabBarDialogsDialogIdRoute
  '/dialogs': typeof TabBarDialogsIndexRoute
  '/try': typeof TabBarTryIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof TabBarRouteWithChildren
  '/dialogs/$dialogId': typeof TabBarDialogsDialogIdRoute
  '/dialogs': typeof TabBarDialogsIndexRoute
  '/try': typeof TabBarTryIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_tab-bar': typeof TabBarRouteWithChildren
  '/_tab-bar/dialogs/$dialogId': typeof TabBarDialogsDialogIdRoute
  '/_tab-bar/dialogs/': typeof TabBarDialogsIndexRoute
  '/_tab-bar/try/': typeof TabBarTryIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/dialogs/$dialogId' | '/dialogs' | '/try'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/dialogs/$dialogId' | '/dialogs' | '/try'
  id:
    | '__root__'
    | '/'
    | '/_tab-bar'
    | '/_tab-bar/dialogs/$dialogId'
    | '/_tab-bar/dialogs/'
    | '/_tab-bar/try/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TabBarRoute: typeof TabBarRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TabBarRoute: TabBarRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_tab-bar"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_tab-bar": {
      "filePath": "_tab-bar.tsx",
      "children": [
        "/_tab-bar/dialogs/$dialogId",
        "/_tab-bar/dialogs/",
        "/_tab-bar/try/"
      ]
    },
    "/_tab-bar/dialogs/$dialogId": {
      "filePath": "_tab-bar/dialogs/$dialogId.tsx",
      "parent": "/_tab-bar"
    },
    "/_tab-bar/dialogs/": {
      "filePath": "_tab-bar/dialogs/index.tsx",
      "parent": "/_tab-bar"
    },
    "/_tab-bar/try/": {
      "filePath": "_tab-bar/try/index.tsx",
      "parent": "/_tab-bar"
    }
  }
}
ROUTE_MANIFEST_END */
